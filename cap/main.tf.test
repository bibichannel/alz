# module "azuread_conditional_access_policy" {
#   for_each = { for idx, def in local.builtin_definitions_updated : idx => def }
#   source   = "../modules/def_assignment"



#   definition                  = each.value.definition
#   assignment_scope            = local.assignment_scope_id
#   assignment_name             = lookup(each.value, "assignment_name", null)
#   assignment_display_name     = lookup(each.value, "assignment_display_name", null)
#   assignment_description      = lookup(each.value, "assignment_description", null)
#   assignment_effect           = lookup(each.value, "assignment_effect", null)
#   assignment_metadata         = lookup(each.value, "assignment_metadata", null)
#   assignment_parameters       = lookup(each.value, "assignment_parameters", {})
#   assignment_enforcement_mode = lookup(each.value, "assignment_enforcement_mode", true)
#   assignment_location         = lookup(each.value, "assignment_location", "westeurope")
#   assignment_not_scopes       = lookup(each.value, "assignment_not_scopes", [])
#   failure_percentage          = lookup(each.value, "failure_percentage", null)
#   identity_ids                = lookup(each.value, "identity_ids", null)
#   location_filters            = lookup(each.value, "location_filters", [])
#   non_compliance_message      = lookup(each.value, "non_compliance_message", null)
#   parallel_deployments        = lookup(each.value, "parallel_deployments", null)
#   re_evaluate_compliance      = lookup(each.value, "re_evaluate_compliance", false)
#   remediation_scope           = lookup(each.value, "remediation_scope", null)
#   resource_count              = lookup(each.value, "resource_count", null)
#   resource_selectors          = lookup(each.value, "resource_selectors", [])
#   role_assignment_scope       = lookup(each.value, "role_assignment_scope", null)
#   role_definition_ids         = lookup(each.value, "role_definition_ids", [])
#   skip_remediation            = lookup(each.value, "skip_remediation", false)
#   skip_role_assignment        = lookup(each.value, "skip_role_assignment", false)
# }

resource "azuread_conditional_access_policy" "example" {
  for_each = local.admin_protection_policies_dataset

  display_name = each.value.displayName
  state        = each.value.state
  conditions {
    client_app_types    = lookup(each.value.conditions, "clientAppTypes", null)
    sign_in_risk_levels = lookup(each.value.conditions, "signInRiskLevels", null)
    user_risk_levels    = lookup(each.value.conditions, "userRiskLevels", null)

    applications {
      included_applications = lookup(each.value.conditions.applications, "includeApplications", null)
      excluded_applications = lookup(each.value.conditions.applications, "excludeApplications", null)
      included_user_actions = lookup(each.value.conditions.applications, "includeUserActions", null)
    }

    devices {
      filter {
        mode = lookup(each.value.conditions.devices.deviceFilter, "mode", null)
        rule = lookup(each.value.conditions.devices.deviceFilter, "rule", null)
      }
    }

    locations {
      included_locations = ["All"]  
      excluded_locations = ["AllTrusted"]
    }

    platforms {
      included_platforms = ["android"]
      excluded_platforms = ["iOS"]
    }

    users {
      included_users = ["All"]
      excluded_users = ["GuestsOrExternalUsers"]
    }
  }

  grant_controls {
    operator          = "OR"
    built_in_controls = ["mfa"]
  }

  session_controls {
    application_enforced_restrictions_enabled = true
    sign_in_frequency                         = 10
    sign_in_frequency_period                  = "hours"
    cloud_app_security_policy                 = "monitorOnly"
  }

}
